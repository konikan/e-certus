<?php


/**
 * This class defines the structure of the 'shipping_options' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 07/15/11 12:03:08
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ShippingOptionsTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ShippingOptionsTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('shipping_options');
		$this->setPhpName('ShippingOptions');
		$this->setClassname('ShippingOptions');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		$this->addForeignKey('COURIER_ID', 'CourierId', 'INTEGER', 'courier', 'ID', true, null, null);
		$this->addColumn('CODE', 'Code', 'VARCHAR', true, 255, null);
		$this->addColumn('SHORT_NAME', 'ShortName', 'VARCHAR', false, 255, null);
		$this->addColumn('NAME', 'Name', 'VARCHAR', true, 255, null);
		$this->addColumn('SERVICE_ID', 'ServiceId', 'VARCHAR', false, 255, null);
		$this->addColumn('IS_PUBLIC_ACCESS', 'IsPublicAccess', 'BOOLEAN', false, null, true);
		$this->addColumn('IS_AVAILABLE', 'IsAvailable', 'BOOLEAN', false, null, true);
		$this->addColumn('SHOW_IN_CALCULATE', 'ShowInCalculate', 'BOOLEAN', false, null, true);
		$this->addColumn('SHOW_IN_TARIFF', 'ShowInTariff', 'BOOLEAN', false, null, true);
		$this->addColumn('CASH_ON_DELIVERY', 'CashOnDelivery', 'BOOLEAN', false, null, false);
		$this->addColumn('COMMISSION', 'Commission', 'DECIMAL', false, 10, null);
		$this->addColumn('PRICE', 'Price', 'DECIMAL', false, 10, null);
		$this->addColumn('INSURANCE', 'Insurance', 'BOOLEAN', false, null, false);
		$this->addColumn('FREE_INSURANCE_LIMIT', 'FreeInsuranceLimit', 'DECIMAL', false, 10, null);
		$this->addColumn('ADDITIONAL_AMOUNT', 'AdditionalAmount', 'BOOLEAN', false, null, false);
		$this->addColumn('NOTICE', 'Notice', 'LONGVARCHAR', false, null, null);
		$this->addColumn('TYPE', 'Type', 'VARCHAR', false, 255, null);
		$this->addColumn('IS_INTERNATIONAL', 'IsInternational', 'BOOLEAN', false, null, false);
		$this->addForeignKey('COUNTRY_ID', 'CountryId', 'INTEGER', 'countries', 'ID', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Courier', 'Courier', RelationMap::MANY_TO_ONE, array('courier_id' => 'id', ), null, null);
    $this->addRelation('Countries', 'Countries', RelationMap::MANY_TO_ONE, array('country_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('OrderShippingOptions', 'OrderShippingOptions', RelationMap::ONE_TO_MANY, array('id' => 'option_id', ), null, null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // ShippingOptionsTableMap

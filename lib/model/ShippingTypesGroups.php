<?php


/**
 * Skeleton subclass for representing a row from the 'shipping_types_groups' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 10/19/10 19:49:39
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class ShippingTypesGroups extends BaseShippingTypesGroups {

	/**
	 * Initializes internal state of ShippingTypesGroups object.
	 * @see        parent::__construct()
	 */
	public function __construct()
	{
		// Make sure that parent constructor is always invoked, since that
		// is where any default values for this object are set.
		parent::__construct();
	}

        public function  __toString() {
            return $this->getCourier().' - '.$this->getName();
          
        }

        public function  getShippingTypessByWeight($weight) {

            $criteria = new Criteria(ShippingTypesGroupsPeer::DATABASE_NAME);

            if ($this->collShippingTypess === null) {
			if ($this->isNew()) {
			   $this->collShippingTypess = array();
			} else {

				$criteria->add(ShippingTypesPeer::GROUP_ID, $this->id);
                                $criteria->add(ShippingTypesPeer::FINAL_WEIGHT,$weight, Criteria::GREATER_EQUAL);
                                $criteria->add(ShippingTypesPeer::INITIAL_WEIGHT,$weight, Criteria::LESS_EQUAL);
				ShippingTypesPeer::addSelectColumns($criteria);
				$this->collShippingTypess = ShippingTypesPeer::doSelect($criteria);
			}
		} else {
			// criteria has no effect for a new object
			if (!$this->isNew()) {
				// the following code is to determine if a new query is
				// called for.  If the criteria is the same as the last
				// one, just return the collection.


				$criteria->add(ShippingTypesPeer::GROUP_ID, $this->id);
                                $criteria->add(ShippingTypesPeer::FINAL_WEIGHT,$weight, Criteria::GREATER_EQUAL);
                                $criteria->add(ShippingTypesPeer::INITIAL_WEIGHT,$weight, Criteria::LESS_EQUAL);

				ShippingTypesPeer::addSelectColumns($criteria);
				if (!isset($this->lastShippingTypesCriteria) || !$this->lastShippingTypesCriteria->equals($criteria)) {
					$this->collShippingTypess = ShippingTypesPeer::doSelect($criteria);
				}
			}
		}
		$this->lastShippingTypesCriteria = $criteria;
		return $this->collShippingTypess;

    }

} // ShippingTypesGroups
